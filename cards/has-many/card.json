{
  "data": {
    "attributes": {
      "csCreated": "2020-08-03T15:38:30.625Z",
      "csFieldOrder": [
      ],
      "csFieldSets": {
        "embedded": [
        ],
        "isolated": [
        ]
      },
      "csFields": {
        "foreignKey": {
          "attributes": {
            "csFieldArity": "singular",
            "csFields": {
            },
            "csTitle": "Foreign Key"
          },
          "relationships": {
            "csAdoptsFrom": {
              "data": {
                "id": "https://base.cardstack.com/public/cards/string-field",
                "type": "cards"
              }
            }
          }
        },
        "foreignType": {
          "attributes": {
            "csFieldArity": "singular",
            "csFields": {
            },
            "csTitle": "Foreign Type"
          },
          "relationships": {
            "csAdoptsFrom": {
              "data": {
                "id": "https://base.cardstack.com/public/cards/base",
                "type": "cards"
              }
            }
          }
        }
      },
      "csId": "has-many",
      "csTitle": "Has Many",
      "csUpdated": "2020-08-03T15:38:43.282Z",
      "csFeatures": {
        "compute": "compute.js"
      },
      "csFiles": {
        "compute.js": "exports default async function({ field, card }) {\n  let foreignKey = await field.value('foreignKey');\n  let foreignType = await field.value('foreignType');\n  try {\n    let found = await card.reader.search({\n      filter: {\n        type: foreignType,\n        eq: {\n         [foreignKey + '.csId']:  card.csId,\n         [foreignKey + '.csRealm']:  card.csRealm,\n         [foreignKey + '.csOriginalRealm']:  card.csOriginalRealm\n        },\n      },\n    });\n    return { value: found.cards };\n  } catch (err) {\n    return { value: [] };\n  }\n}\n"
      }
    },
    "id": "https://builder-hub.stack.cards/api/realms/bunny-records/cards/has-many",
    "meta": {
    },
    "relationships": {
      "csAdoptsFrom": {
        "data": {
          "id": "https://base.cardstack.com/public/cards/base",
          "type": "cards"
        }
      }
    },
    "type": "cards"
  }
}